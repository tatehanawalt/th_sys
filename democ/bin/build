#!/usr/bin/env zsh
#
# This is a brew project build script. This build will be called with a
# This script must build and tar the project which will then be uploaded to a github release as a release asset
#
# PARAMS:
#   1. project path
#   2. destination path
#   3. build version
#   *: potentially more metadata in the future
#
# Return:
#   Exit Code 0 - successfully packaged project to the destination path
#   Exit Code 1 - input error (number of params, format of paramss, validity of params etc...)
#                 This would also be fore a non-existent destination path or directory.
#   Exit Code 2 - system failure (i.e something went wrong while building the project)
#
# More Information:
# Assumptions:
# 1. Project name equals the basename of the PROJECT_PATH
# 2. The destination path will not be taken by another file object
# 3. The destination directory will exist

if [ ${#@} -lt 3 ]; then
  printf "ERROR - build script ${0} args count less than 3. got argc=${#@}\n"
  return  1
fi

local PROJECT_PATH="$1"
local PROJECT_NAME=$(basename "$PROJECT_PATH")
local BUILD_TARGET="$2"
local BUILD_VERSION="$3"

if [ ! -d "$PROJECT_PATH" ]; then
  printf "ERROR - build script ${0} PROJECT_PATH is not a directory at PROJECT_PATH=$PROJECT_PATH\n"
  return  1
fi

if [ -f "$BUILD_TARGET" ]; then
  printf "ERROR - build script ${0} BUILD_TARGET path is an existing fs object at BUILD_TARGET=$BUILD_TARGET\n"
  return  1
fi

# Create a temporary build directory
BUILD_TMP_DIR="$(mktemp -d)"

# full path of the output .tar.gz file = <out_dir(arg 2)>/<project_name>.tar.gz
ARCHIVE_DST_PATH="$BUILD_TARGET/$PROJECT_NAME.tar.gz"

printf "PACKAGE: %s\n"            "$PROJECT_NAME"
printf " - PROJECT_PATH=%s\n"     "$PROJECT_PATH"
printf " - BUILD_TARGET=%s\n"     "$BUILD_TARGET"
printf " - BUILD_VERSION=%s\n"    "$BUILD_VERSION"
printf " - BUILD_TMP_DIR=%s\n"    "$BUILD_TMP_DIR"
printf " - ARCHIVE_DST_PATH=%s\n" "$ARCHIVE_DST_PATH"

gcc "$PROJECT_PATH/main.c" -o "$BUILD_TMP_DIR/main" # Compile main.c
cp -r "$PROJECT_PATH/doc" "$BUILD_TMP_DIR"          # Copy over any documentation

# Tar the temporary build directory to the out directory specified with $2
cd "$BUILD_TMP_DIR"
tar -czf $ARCHIVE_DST_PATH *
tar_exit_code=$?
if [ $tar_exit_code -ne 0 ]; then
  printf "ERROR: - ${PROJECT_NAME} tar failed with exit code $tar_exit_code\n"
  return 2
fi
if [ ! -f "$ARCHIVE_DST_PATH" ]; then
  printf "ERROR: - ${PROJECT_NAME} pack failed to generate tar archive at $ARCHIVE_DST_PATH\n"
  return 2
fi
printf "%s\n" "$ARCHIVE_DST_PATH"
return 0

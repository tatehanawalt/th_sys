#!/bin/bash

my_path=$0
. "$(dirname $my_path)/helpers.sh"

IFS=$'\n'

printf -v readme_path '%s/README.md' "$(git_repo_root)"
printf -v repo_name '%s' "$(git_repo_name)"

# Title / Header
content=($(just_wrap '#' ' ' $(echo $repo_name | tr a-z A-Z)))
content+=("Executable projects written in various languages")
content+=("Find $(link_me Brew 'https://brew.sh/') install instructions at  $(link_me 'tatehanawalt/homebrew-devtools' 'https://github.com/tatehanawalt/homebrew-devtools')")
page_content+=($(html_wrap div 'align="center"' ${content[@]}))

repo_root="$(git_repo_root)"
printf "Repo Root: %s\n" "$repo_root"
project_names=$(find "$repo_root" \
  -maxdepth 1 \
  -mindepth 1 \
  -type d \
  -exec basename {} \; | \
  sed 's/^old.*//g' | \
  sed 's/\..*//' | \
  sort -u | \
  sed '/^$/d')

# Overview
page_content+=($(just_wrap '##' ' ' 'Overview'))
content=('Each project is a single project which can be built/compiled to a single binary (or java byte code) and installed/run with brew')
content+=('<br>')

# Criteria
content+=($(just_wrap '####' ' ' 'Project Criteria:'))

content+=('<br>')

content+=($(just_wrap '**' '' 'Projects must have root level directories:'))
content+=('  - `bin`')
content+=('    - `build` - Executable file (described below) which builds the project to a tar file <name>.tar.gz')
content+=('  - `doc`')
content+=('    - `man`')
content+=('      - `<project_name>.1` - Man 1 Page file for the project')

content+=($(just_wrap '####' ' ' 'Specific Project Files:'))
content+=("$(just_wrap '**' '' '`bin/build`') - Builds project binary or java byte code")

content+=($(just_wrap '**' '' 'Params:'))
content+=('  1. Project Path: `<path/to/this/repo>/<project>`')
content+=('  2. Destination path: A directory where the build script must build the project to')
content+=('  3. Build Version: Semver')

content+=($(just_wrap '**' '' 'Exit Codes:'))
content+=('  - **0**: Successfully packaged project to the destination path')
content+=('  - **1**: Input error (invalid param count, format, or any input/context related issues)')
content+=('  - **2**: Failed to build project for any other reason')

content+=('<br>')

content+=($(just_wrap '**' '' 'Build a project'))
content+=('  1. `cd` to the root directory of one of the projects - `<path/to/repo>/<project`')
content+=('  2. Create a directory where the project will build. try `<path/to/repo>/out` with `mkdir out`')
content+=('  3. Run Build Command `./bin/build $(pwd) $(pwd)/out 0.0.0`')

page_content+=(${content[@]})

# Overview

# Projects
page_content+=($(just_wrap '##' ' ' 'Projects'))
for name in ${project_names[@]}; do
  page_content+=($(link_me $name "https://github.com/tatehanawalt/$(git_repo_name)/tree/main/$name"))
done

page_content+=($(just_wrap '##' ' ' 'Development'))
page_content+=($(just_wrap '**' '' 'Generate Project README'))
page_content+=('The readme is generated by running the script below with no arguments.')
page_content+=($(code 'shell' './.github/scripts/gen_readme.sh'))

printf "" > "$readme_path"
for row in "${page_content[@]}"; do
  printf "$row\n\n" >> "$readme_path"
done
